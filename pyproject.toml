[tool.poetry]
name = "quantiq"
version = "0.1.0"
description = "Brazilian Stock Market Data API with REIT support"
authors = ["Your Name <your.email@example.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "quantiq"}]

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.104.0"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
sqlalchemy = "^2.0.0"
pydantic = "^2.5.0"
requests = "^2.31.0"
beautifulsoup4 = "^4.12.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.1.6"
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
pre-commit = "^3.5.0"

# Using Makefile for convenient commands instead of poetry scripts

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Ruff Configuration
[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "RUF", # ruff-specific rules
    "ASYNC", # flake8-async
    "PIE", # flake8-pie
    "PERF", # perflint
]

ignore = [
    "E501",    # line too long, handled by formatter
    "B008",    # do not perform function calls in argument defaults
    "RUF012",  # mutable class attributes should be annotated
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports
"tests/*" = ["ARG001", "S101"]    # Allow unused arguments and assert in tests
"migrations/*" = ["E501"]  # Allow long lines in migrations

[tool.ruff.lint.isort]
known-first-party = ["quantiq"]
force-sort-within-sections = true

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

# Pytest Configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=quantiq",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html",
    "--cov-fail-under=70",
]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
]

# Coverage Configuration
[tool.coverage.run]
source = ["quantiq"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "@abstract",
]
